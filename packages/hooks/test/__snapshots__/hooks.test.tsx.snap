// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hooks exports 1`] = `
Array [
  "UserAddressFragment",
  "UserAddressQuery",
  "UserChildrenFragment",
  "UserChildrenQuery",
  "UserFavouritesFragment",
  "UserFavouritesQuery",
  "UserPetFragment",
  "UserPetsFragment",
  "UserPetsQuery",
  "UserProvider",
  "UserSegmentsFragment",
  "UserSegmentsQuery",
  "UserSubscriptionsFragment",
  "UserSubscriptionsQuery",
  "dataIdFromObject",
  "useBetterLazyQuery",
  "useDealCheckSecureCode",
  "useDealSubscribe",
  "useDealVisiblePartnerForUser",
  "useFetchLoyaltyRetrieveBalance",
  "useFetchPartnerLocator",
  "useFetchUser",
  "useFetchUserCheckPasswordTokenValidity",
  "useLogin",
  "useLoyaltyRetrieveBalance",
  "useMetadataAccountPasswordPolicy",
  "useMetadataAnimalBreeds",
  "useMetadataAnimalLifestyles",
  "useMetadataAnimalPathologies",
  "useMetadataAnimalSpecialNeeds",
  "useMetadataAnimalTypes",
  "useMetadataAnimalUniverses",
  "useMetadataCountries",
  "useMetadataLanguages",
  "useMetadataLegalForms",
  "useMetadataPartnerTypes",
  "useMetadataPlaceOfPurchase",
  "useMetadataSubscriptions",
  "useMetadataUserTitles",
  "usePartnerDetails",
  "useUser",
  "useUserAddress",
  "useUserAddressCreate",
  "useUserAddressUpdate",
  "useUserCheckPasswordTokenValidity",
  "useUserCheckValidRemoteAuth",
  "useUserChildren",
  "useUserChildrenCreate",
  "useUserChildrenUpdate",
  "useUserConfirmLegalForms",
  "useUserContext",
  "useUserCreate",
  "useUserDeleteSelf",
  "useUserEmailExist",
  "useUserFavourites",
  "useUserFavouritesCreate",
  "useUserFavouritesDelete",
  "useUserIsLogged",
  "useUserLogin",
  "useUserLoginByAccessToken",
  "useUserLoginByPublicToken",
  "useUserLogout",
  "useUserPets",
  "useUserPetsCreate",
  "useUserPetsDelete",
  "useUserPetsUpdate",
  "useUserPublicSubscriptions",
  "useUserPublicSubscriptionsUpdate",
  "useUserPublicTags",
  "useUserRecoverPassword",
  "useUserSegments",
  "useUserSubscriptions",
  "useUserSubscriptionsUpdate",
  "useUserToken",
  "useUserUpdate",
  "useUserUpdateRecoveredPassword",
  "useUserUpdateToken",
  "userTokenContext",
]
`;
